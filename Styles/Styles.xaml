    <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:LibraryApp"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf">


    <Style x:Key="LabelInputFormStyle" TargetType="Label">
        <Setter Property="Width" Value="325"/>
        <Setter Property="Padding" Value="0 3"/>
        <Setter Property="Margin" Value="0 10 0 0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Medium"/>
    </Style>
    <Style x:Key="LabelErrorFormStyle" TargetType="Label">
        <Setter Property="Width" Value="325"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0 0 0 -15"/>
        <Setter Property="Foreground" Value="#FFC80000"/>
        <Setter Property="FontWeight" Value="Medium"/>
    </Style>


    <Style x:Key="UserCharacter" x:Name="UserCharacter" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
    </Style>

    <Style x:Key="UserCharacterValue" x:Name="UserCharacterValue" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="0 10"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
    </Style>
    <Style x:Key="UserCharacterValueBox" x:Name="UserCharacterValueBox" TargetType="TextBox">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="0 9"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
    </Style>
    <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
        
    <Style x:Key="PasswordBoxStyle1" TargetType="{x:Type PasswordBox}">
        <Setter Property="PasswordChar" Value="*"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                     BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="8" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            <TextBlock x:Name="WatermarkText" 
                                Text="{Binding WaterMark, RelativeSource={RelativeSource TemplatedParent}}"
                                Foreground="Gray" Margin="5,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Visibility="Collapsed"
                                IsHitTestVisible="False"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocusWithin}" Value="False"/>
                                <Condition Binding="{Binding Password}" Value="{x:Null}"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="WatermarkText" Value="Visible"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocusWithin}" Value="False"/>
                                <Condition Binding="{Binding Password}" Value=""/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="WatermarkText" Value="Visible"/>
                        </MultiDataTrigger>
                        <!--Триггер, отвечающий за свойство Visibility элемента Textbox в зависимости от значения checkbox-->
                        <DataTrigger Binding="{Binding ElementName=CbWindowsLogin, Path=IsChecked}" Value="True">
                            <Setter Property="TextBox.Visibility" Value="Hidden"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="PasswordBoxStyle2" TargetType="{x:Type PasswordBox}">
        <Setter Property="PasswordChar" Value="*"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                 BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="8" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            <TextBlock x:Name="WatermarkText" 
                            Text="{Binding WaterMark, RelativeSource={RelativeSource TemplatedParent}}"
                            Foreground="Gray" Margin="5,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Visibility="Collapsed"
                            IsHitTestVisible="False"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocusWithin}" Value="False"/>
                                <Condition Binding="{Binding ConfirmPassword}" Value="{x:Null}"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="WatermarkText" Value="Visible"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocusWithin}" Value="False"/>
                                <Condition Binding="{Binding ConfirmPassword}" Value=""/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="WatermarkText" Value="Visible"/>
                        </MultiDataTrigger>
                        <!--Триггер, отвечающий за свойство Visibility элемента Textbox в зависимости от значения checkbox-->
                        <DataTrigger Binding="{Binding ElementName=CbWindowsLogin, Path=IsChecked}" Value="True">
                            <Setter Property="TextBox.Visibility" Value="Hidden"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBox" x:Key="CbWinLog">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                     BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="8" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" />
                            <TextBlock x:Name="WatermarkText" 
                                Text="{Binding WaterMark, RelativeSource={RelativeSource TemplatedParent}}"
                                Foreground="Gray" Margin="5,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Visibility="Collapsed"
                                IsHitTestVisible="False"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocusWithin" Value="False"/>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="WatermarkText" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocusWithin" Value="False"/>
                                <Condition Property="Text" Value="{x:Null}"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="WatermarkText" Value="Visible"/>
                        </MultiTrigger>
                        <!--Триггер, отвечающий за свойство Visibility элемента Textbox в зависимости от значения checkbox-->
                        <DataTrigger Binding="{Binding ElementName=CbWindowsLogin, Path=IsChecked}" Value="True">
                            <Setter Property="TextBox.Visibility" Value="Hidden"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Name="ImageCatalogStyle" x:Key="ImageCatalogStyle" TargetType="{x:Type Image}">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Stretch" Value="Uniform"/>
    </Style>

    <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
    <Style x:Key="GroupBoxStyle1" TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="#D5DFE5"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="6"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="6"/>
                        </Grid.RowDefinitions>
                        <Border Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4" Grid.Column="0" Grid.ColumnSpan="4" Grid.RowSpan="3" Grid.Row="1"/>
                        <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4" Grid.ColumnSpan="4" Grid.RowSpan="3" Grid.Row="1">
                            <Border.OpacityMask>
                                <MultiBinding ConverterParameter="7" Converter="{StaticResource BorderGapMaskConverter}">
                                    <Binding ElementName="Header" Path="ActualWidth"/>
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=Self}"/>
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=Self}"/>
                                </MultiBinding>
                            </Border.OpacityMask>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                                <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2"/>
                            </Border>
                        </Border>
                        <Border x:Name="Header" Grid.Column="1" Padding="3,1,3,0" Grid.RowSpan="2" Grid.Row="0">
                            <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ContentPresenter Grid.Column="1" Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="TextSpecificStyle" x:Name="TextSpecificStyle" TargetType="TextBlock">
        <Setter Property="Margin" Value="0 5 0 0"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Padding" Value="0 0 10 0"/>
    </Style>


    <Style x:Name="TextCharactereStyle" x:Key="TextCharactereStyle" TargetType="TextBlock">
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Margin" Value="0 5 10 0"/>
        <Setter Property="Padding" Value="10 0 0 0"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>

</ResourceDictionary>